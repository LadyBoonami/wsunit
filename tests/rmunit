#!/bin/bash

mkdir config/base

mkdir config/derived
mkdir -p config/derived/deps
touch config/derived/deps/base
mkdir -p config/derived/revdeps
touch config/derived/revdeps/@default

mkdir config/intermediate
mkdir -p config/intermediate/deps
touch config/intermediate/deps/base
mkdir -p config/intermediate/revdeps
touch config/intermediate/revdeps/derived



start
sleep 2

if [ "$(cat state/state/base)" != "ready" ]; then
	err "base did not start correctly"
	kill -TERM "$pid"
	exit 1
fi

if [ "$(cat state/state/intermediate)" != "ready" ]; then
	err "intermediate did not start correctly"
	kill -TERM "$pid"
	exit 1
fi

if [ "$(cat state/state/derived)" != "ready" ]; then
	err "derived did not start correctly"
	kill -TERM "$pid"
	exit 1
fi



rm -r config/intermediate

signal USR2
sleep 2

if [ "$(cat state/state/base)" != "ready" ]; then
	err "base died"
	kill -TERM "$pid"
	exit 1
fi

if [ "$(cat state/state/derived)" != "ready" ]; then
	err "derived died"
	kill -TERM "$pid"
	exit 1
fi

if [ -e "state/state/intermediate" ] && [ "$(cat state/state/intermediate)" != "down" ]; then
	err "intermediate did not stop correctly"
	kill -TERM "$pid"
	exit 1
fi



stop



if kill -0 "$pid" >/dev/null 2>&1; then
	err "process did not stop"
	kill -9 "$pid"
	exit 1
fi

if [ "$(cat state/state/base)" != "down" ]; then
	err "base did not stop correctly"
	exit 1
fi

if [ "$(cat state/state/derived)" != "down" ]; then
	err "derived did not stop correctly"
	exit 1
fi



ok completed
