#!/bin/bash

#TODO: test config, state

function unittest() {
	if [ ! -e "$WSUNIT_CONFIG_DIR/$1" ]; then
		echo "error: $1: unit not found" >&2
		exit 1
	fi
}

function bump() {
	pkill -F "$WSUNIT_STATE_DIR/wsunitd.pid" -USR1
}

function waitstate() {
	while [ "$(cat "$WSUNIT_STATE_DIR/state/$1")" != "$2" ]; do
		inotifywait --quiet --quiet --timeout 3 "$WSUNIT_STATE_DIR/state/$1"
	done
}

case "$1" in
	status)
		( cd "$WSUNIT_STATE_DIR/state" && grep -H "" * )
	;;

	graph)
		(
			cd "$WSUNIT_CONFIG_DIR"
			echo "digraph {"
			for d in *; do
				state="$(cat "$WSUNIT_STATE_DIR/state/$d")"
				case "$state" in
					down)    color=red    ;;
					running) color=yellow ;;
					ready)   color=green  ;;
				esac

				echo "\"$d\" [color=\"$color\"];"
				find "$d/deps" -type f -printf "\"$d\" -> \"%f\" [direction=\"reverse\", arrowtail=\"rev\"];\\n" 2>/dev/null
				find "$d/revdeps" -type f -printf "\"%f\" -> \"$d\" [];\\n" 2>/dev/null
			done
			echo "}"
		) | dot -Tx11
	;;

	shutdown)
		pkill -F "$WSUNIT_STATE_DIR/wsunitd.pid" -TERM
	;;

	bump)
		bump
	;;

	refresh)
		pkill -F "$WSUNIT_STATE_DIR/wsunitd.pid" -USR2
	;;

	"+w")
		unittest "$2"
		touch "$WSUNIT_STATE_DIR/wanted/$2"
	;;

	"-w")
		unittest "$2"
		rm "$WSUNIT_STATE_DIR/wanted/$2" 2>/dev/null || true
	;;

	"+m")
		unittest "$2"
		touch "$WSUNIT_STATE_DIR/masked/$2"
	;;

	"-m")
		unittest "$2"
		rm "$WSUNIT_STATE_DIR/masked/$2" 2>/dev/null || true
	;;

	"+d")
		unittest "$2"
		unittest "$3"
		mkdir -p "$WSUNIT_CONFIG_DIR/$2/deps"
		touch "$WSUNIT_CONFIG_DIR/$2/deps/$3"
	;;

	"-d")
		unittest "$2"
		unittest "$3"
		rm "$WSUNIT_CONFIG_DIR/$2/deps/$3" 2>/dev/null || true
	;;

	"+r")
		unittest "$2"
		unittest "$3"
		mkdir -p "$WSUNIT_CONFIG_DIR/$2/revdeps"
		touch "$WSUNIT_CONFIG_DIR/$2/revdeps/$3"
	;;

	"-r")
		unittest "$2"
		unittest "$3"
		rm "$WSUNIT_CONFIG_DIR/$2/revdeps/$3" 2>/dev/null || true
	;;

	"restart")
		unittest "$2"

		touch "$WSUNIT_STATE_DIR/masked/$2"
		bump
		waitstate "$2" "down"

		rm "$WSUNIT_STATE_DIR/masked/$2"
		bump
		waitstate "$2" "ready"
		# TODO: what if service not needed?
	;;

	"logs")
		tail -f "$WSUNIT_LOG_DIR/$2."*
	;;

	*)
		# TODO
		exit 1
	;;
esac
